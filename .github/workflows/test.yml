name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - name: Test golang code
        run: go test ./...
      - name: Build golang code
        run: go build
  linux-android-windows-libs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c
          add-to-path: true
      - name: Install requirement
        run: sudo apt-get update && sudo apt-get install gcc-aarch64-linux-gnu binutils-mingw-w64 gcc-mingw-w64-x86-64 -y
      - name: Test golang code
        run: go test ./...
      - name: Build linux libs
        run: ./scripts/build_libs/buildso.sh
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Build windows libs
        run: ./scripts/build_libs/builddll.sh
      - uses: actions/upload-artifact@v4
        with:
          name: linux-libs
          path: build/linux
#      - uses: actions/upload-artifact@v4
#        with:
#          name: android-libs
#          path: build/android
      - uses: actions/upload-artifact@v4
        with:
          name: windows-libs
          path: build/windows
  macos-iOS-libs:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - name: Test golang code
        run: go test ./...
      - name: Build libs
        run: ./scripts/build_libs/builddylib.sh
      - uses: actions/upload-artifact@v4
        with:
          name: macos-libs
          path: build/macos
      - uses: actions/upload-artifact@v4
        with:
          name: ios-libs
          path: build/ios
  gomobile-android-libs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          add-to-path: false
      - name: Test golang code
        run: go test ./...
      - name: install and setup gomobile
        run: |
          go get -u golang.org/x/mobile
          go install golang.org/x/mobile/cmd/gobind@latest
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          gomobile version
          gomobile clean
        env:
          GO111MODULE: on
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: build android aar
        run: gomobile bind -target=android  -o gateway.aar ./client
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - uses: actions/upload-artifact@v4
        with:
          name: android-aar-libs
          path: gateway.aar
  gomobile-apple-libs:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - name: Test golang code
        run: go test ./...
      - name: install and setup gomobile
        run: |
          go get -u golang.org/x/mobile
          go install golang.org/x/mobile/cmd/gobind@latest
          go install golang.org/x/mobile/cmd/gomobile@latest
          gomobile init
          gomobile version
          gomobile clean
        env:
          GO111MODULE: on
      - name: build ios xcframework
        run: gomobile bind -ldflags '-w -s -extldflags "-lresolve"' --target=ios,macos,iossimulator -o OpenIoTHubGateway.xcframework ./client
      - run: zip -r OpenIoTHubGateway.xcframework.zip OpenIoTHubGateway.xcframework
      - uses: actions/upload-artifact@v4
        with:
          name: ios-macos-xcframework-libs
          path: OpenIoTHubGateway.xcframework.zip
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
#      - name: Install Snapcraft
#        uses: samuelmeuli/action-snapcraft@v3
      - name: Install Snapcraft
        run: |
          sudo snap install snapcraft --classic
          mkdir -p $HOME/.cache/snapcraft/download
          mkdir -p $HOME/.cache/snapcraft/stage-packages
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --snapshot
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: goreleaser-dist
          path: dist/*